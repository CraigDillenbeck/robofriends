{"ast":null,"code":"var _jsxFileName = \"/Users/craigdillenbeck/Sites/ZTM/Complete-Web-Developer/robofriends/src/App.js\";\nimport React, { useState, Component } from 'react';\nimport CardList from './CardList';\nimport SearchBox from './SearchBox';\nimport './App.css';\n\n/* const App = () => {\n  const [robots, setRobots] = useState();\n  const [searchField, setSearchField] = useState();\n\n  onSearchChange = (e) => {\n    setSearchField(e.target.value);\n  }\n\n  return (\n    <div className='tc'>\n      <h1>RoboFriends</h1>\n      <SearchBox searchChange={onSearchChange} />\n      <CardList robots={robots} />\n    </div>\n  )\n} */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n{/* older version of react below */}\nclass App extends Component {\n  constructor() {\n    super();\n    this.onSearchChange = event => {\n      {/* when creating a method must use arrow function */}\n      this.setState({\n        searchfield: event.target.value\n      });\n    };\n    this.state = {\n      robots: [],\n      searchfield: ''\n    };\n  }\n  componentDidMount() {\n    {/* componentDidMount is part of react, no need for arrow function */}\n    {/* fetch() is a window. method */}\n    fetch('https://jsonplaceholder.typicode.com/users').then(response => response.json()).then(users => this.setState({\n      robots: users\n    }));\n  }\n  render() {\n    const filteredRobots = this.state.robots.filter(robot => {\n      return robot.name.toLowerCase().includes(this.state.searchfield.toLowerCase());\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tc\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"f1\",\n        children: \"RoboFriends\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SearchBox, {\n        searchChange: this.onSearchChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardList, {\n        robots: filteredRobots\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default App;","map":{"version":3,"names":["React","useState","Component","CardList","SearchBox","jsxDEV","_jsxDEV","App","constructor","onSearchChange","event","setState","searchfield","target","value","state","robots","componentDidMount","fetch","then","response","json","users","render","filteredRobots","filter","robot","name","toLowerCase","includes","className","children","fileName","_jsxFileName","lineNumber","columnNumber","searchChange"],"sources":["/Users/craigdillenbeck/Sites/ZTM/Complete-Web-Developer/robofriends/src/App.js"],"sourcesContent":["import React, { useState, Component } from 'react'\nimport CardList from './CardList'\nimport SearchBox from './SearchBox'\nimport './App.css'\n\n/* const App = () => {\n  const [robots, setRobots] = useState();\n  const [searchField, setSearchField] = useState();\n\n  onSearchChange = (e) => {\n    setSearchField(e.target.value);\n  }\n\n  return (\n    <div className='tc'>\n      <h1>RoboFriends</h1>\n      <SearchBox searchChange={onSearchChange} />\n      <CardList robots={robots} />\n    </div>\n  )\n} */\n\n{/* older version of react below */}\n\nclass App extends Component {\n  constructor() {\n    super()\n    this.state = {\n      robots: [],\n      searchfield: ''\n    }\n  }\n\n  componentDidMount() {\n    {/* componentDidMount is part of react, no need for arrow function */}\n    {/* fetch() is a window. method */}\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then(response => response.json())\n      .then(users => this.setState({ robots: users }));\n  }\n\n  onSearchChange = (event) => {\n    {/* when creating a method must use arrow function */}\n    this.setState({ searchfield: event.target.value })\n  }\n\n  render() {\n    const filteredRobots = this.state.robots.filter(robot => {\n      return robot.name.toLowerCase().includes(this.state.searchfield.toLowerCase())\n    })\n\n    return (\n      <div className='tc'>\n        <h1 className='f1'>RoboFriends</h1>\n        <SearchBox searchChange={this.onSearchChange} />\n        <CardList robots={filteredRobots} />\n      </div>\n    )\n  }\n}\nexport default App"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAO,WAAW;;AAElB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAfA,SAAAC,MAAA,IAAAC,OAAA;AAiBA,CAAC;AAED,MAAMC,GAAG,SAASL,SAAS,CAAC;EAC1BM,WAAWA,CAAA,EAAG;IACZ,KAAK,CAAC,CAAC;IAAA,KAeTC,cAAc,GAAIC,KAAK,IAAK;MAC1B,CAAC;MACD,IAAI,CAACC,QAAQ,CAAC;QAAEC,WAAW,EAAEF,KAAK,CAACG,MAAM,CAACC;MAAM,CAAC,CAAC;IACpD,CAAC;IAjBC,IAAI,CAACC,KAAK,GAAG;MACXC,MAAM,EAAE,EAAE;MACVJ,WAAW,EAAE;IACf,CAAC;EACH;EAEAK,iBAAiBA,CAAA,EAAG;IAClB,CAAC;IACD,CAAC;IACDC,KAAK,CAAC,4CAA4C,CAAC,CAChDC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,KAAK,IAAI,IAAI,CAACX,QAAQ,CAAC;MAAEK,MAAM,EAAEM;IAAM,CAAC,CAAC,CAAC;EACpD;EAOAC,MAAMA,CAAA,EAAG;IACP,MAAMC,cAAc,GAAG,IAAI,CAACT,KAAK,CAACC,MAAM,CAACS,MAAM,CAACC,KAAK,IAAI;MACvD,OAAOA,KAAK,CAACC,IAAI,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAAC,IAAI,CAACd,KAAK,CAACH,WAAW,CAACgB,WAAW,CAAC,CAAC,CAAC;IAChF,CAAC,CAAC;IAEF,oBACEtB,OAAA;MAAKwB,SAAS,EAAC,IAAI;MAAAC,QAAA,gBACjBzB,OAAA;QAAIwB,SAAS,EAAC,IAAI;QAAAC,QAAA,EAAC;MAAW;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACnC7B,OAAA,CAACF,SAAS;QAACgC,YAAY,EAAE,IAAI,CAAC3B;MAAe;QAAAuB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAChD7B,OAAA,CAACH,QAAQ;QAACa,MAAM,EAAEQ;MAAe;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjC,CAAC;EAEV;AACF;AACA,eAAe5B,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}